import java.util.Random;
import java.util.Scanner;

public class JavaLectureOthers {
    public static void quickSort(int[] input, int start, int end) {
        if(end-start < 10) {
            insertionSort(input, start, end); 
        }
        else {
            int pivotIndex = partition(input, start, end);
            quickSort(input, start, pivotIndex);
            quickSort(input, pivotIndex+1, end);
        }
    }
    
    public static int partition(int[] input, int start, int end){
        int pivot = input[start];
        int i = start;
        int j = end-1;
        while(i < j) {
            while(i < j && input[j] >=pivot) {
                j--;
            }
            if(i < j) {
                input[i] = input[j];
            }
            while (i < j && input[i] <= pivot) {
                i++;
            }
            if (i < j) {
                input[j] = input[i];
            } 
        }
        input[j] = pivot;
        return j;
    }
   
    public static void insertionSort(int[] array, int start, int end) {
        int i, j, key;
        for (i = start; i<end; i++) {
            key = array[i];
            for (j = i-1; j >= 0 && key < array[j]; j-- ) {
                array[j+1] = array[j];
            }
            array[j+1] = key;
        }
    }
    public static int[] rng(int N) {
        Random rand = new Random();
        int a[] = new int[N];
        for (int i = 0; i<a.length; i++) {
           a[i] = rand.nextInt(200)-100;       
        }
        return a;
    }    
    public static void main(String[] args) {
        Scanner scan  = new Scanner(System.in);
        System.out.println("Iveskite, kiek skaiciu norite isrusiuoti: ");
        int N = scan.nextInt();
        int[] arr = rng(N);        
        quickSort(arr, 0, arr.length);
        for (int i = 0; i < arr.length; i++) {
            System.out.println(arr[i]);
        }
    }    
}
